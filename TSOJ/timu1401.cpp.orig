#include<iostream>
#include<cstring>
#include<algorithm>
#include<vector>
#define INF 999999999

using namespace std;

vector<int> a;
int dp[1010][1010];
int solve(int n)
{
	memset(dp,0,sizeof(dp));
	for (int len = 2; len <= n; len++)
	{
		for(int i=1; i<=n-len+1; i++)
		{
			int j = i+len-1;
			dp[i][j] = dp[i+1][j] + a[i-1]*a[i]*a[j];
			for (int k = i+1; k < j; k++)
			{
				int count = dp[i][k] + dp[k+1][j] + a[i-1] * a[k] * a[j];
				if (count < dp[i][j])
					dp[i][j] = count;
				
			}
		}
	}
	return dp[1][n-1];
}
int main()
{
	int n;
	while(cin>>n)
	{
		bool falg=false;
		int b, c;
		for(int i=0; i<n; i++)
		{
			cin>>b>>c;
			a.push_back(b);
			a.push_back(c);
		}
		for(int i=1; i<a.size()-1; i+=2)
		{
			if(a[i] != a[i+1])
			{
				falg=true;
				break;
			}
		}
		if(!falg)
		{
			for(int i=0; i<a.size(); ++i)
			{
				for(int j=i+1; j<a.size(); ++j)
				{
					if(a[i] == a[j])
						a.erase(a.begin()+j);
				}
			}
			cout<<solve(n)<<endl;
		}
		else
			cout<<"invalid argument"<<endl;
		a.clear();
	}
	return 0;
}

